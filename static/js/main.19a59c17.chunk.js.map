{"version":3,"sources":["YoutubeListContext/YoutubeListContext.jsx","Components/Tooltip/Tooltip.jsx","Components/Search/Search.jsx","Components/Navigation/Navigation.jsx","Components/Home/Home.jsx","Components/Card/Card.jsx","Components/Modal/Modal.jsx","Components/YouTubePlayer/YouTubePlayer.jsx","Components/VideoListComponent/VideoListComponent.jsx","Components/Loader/Loader.jsx","Components/AllVideos/AllVideos.jsx","Components/Covid19Videos/Covid19Videos.jsx","Components/ErrorPage/ErrorPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["youtubeListContextProvider","React","createContext","YoutubeListContext","children","useState","allVideoPlayList","setAllVideoPlayList","nextPageTokenState","setNextPageTokenState","setPrevPageToken","searchTerm","setSearchTerm","fetchData","a","createdDynamicUrl","createApiUrl","fetch","response","json","resData","nextPageToken","items","length","newList","concat","hasOwnProperty","prevPageToken","console","log","useEffect","nextToken","value","handleChange","e","target","Provider","Tooltip","text","rest","show","setShow","className","onMouseEnter","onMouseLeave","Search","contextObject","useContext","type","placeholder","onChange","style","color","Navigation","to","exact","activeClassName","Home","Card","img","title","description","publishDate","monthNames","src","d","date","Date","getUTCDate","getUTCMonth","getUTCFullYear","dateFormat","Modal","handleClose","href","onClick","YouTubePlayer","videoId","this","props","opts","height","width","playerVars","autoPlay","onReady","_onReady","event","pauseVideo","Component","VideoListComponent","youtubeCovid19ListProp","showModal","setShowModal","setVideoId","videoSnipList","filter","item","snippet","toLowerCase","includes","map","index","id","thumbnails","publishedAt","resourceId","uniqueVideoId","high","url","Loader","redirctTo","setRedirctTo","timeoutfn","setTimeout","clearTimeout","AllVideos","filterDataNonCovid19","match","memo","Covid19Videos","filterDataCovid19","ErrorPage","App","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19a59c17.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport const youtubeListContextProvider = React.createContext();\r\n// this is the state management technique using context API\r\nconst YoutubeListContext = ({ children }) => {\r\n  const [allVideoPlayList, setAllVideoPlayList] = useState([]);\r\n  const [nextPageTokenState, setNextPageTokenState] = useState(\"\");\r\n  const [prevPageToken, setPrevPageToken] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  //if you are getting error 403: The request cannot be completed because you have exceeded your you tube youtube.quota\r\n  // then use one of the below key or uncomment one of the line\r\n\r\n  //const APIKEY = \"AIzaSyDObOFmJoBBmBjxttHwljONO81XntYn14M\";\r\n  //const APIKEY = \"AIzaSyAiQTTl4I4eCVR5R7Sk5XF8CV-541aobZY\";\r\n  const APIKEY = \"AIzaSyA4SL0kkCUpPKqa1DK6WDjbWZy_L4z9V70\";\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const createdDynamicUrl = createApiUrl(nextPageTokenState);\r\n      let response = await fetch(createdDynamicUrl);\r\n      let resData = await response.json();\r\n      const { nextPageToken } = resData;\r\n      if (resData.items && resData.items.length > 0) {\r\n        const newList = allVideoPlayList.concat(resData.items);\r\n        let prevPageId = resData.hasOwnProperty(\"prevPageToken\");\r\n        if (prevPageId) {\r\n          setPrevPageToken(resData.prevPageToken);\r\n        }\r\n        setAllVideoPlayList(newList);\r\n        setNextPageTokenState(nextPageToken);\r\n      }\r\n    } catch (err) {\r\n      console.log(err); // TypeError: failed to fetch\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // we are fetching the all video data from you tube api,\r\n    //but one hit will give you the only 50 records\r\n    // if we want all records then we have to pass the nextPageTokenState as dependancy array\r\n  }, [nextPageTokenState]);\r\n\r\n  const createApiUrl = (nextPageToken) => {\r\n    const nextToken = nextPageToken != \"\" ? `&pageToken=${nextPageToken}` : \"\";\r\n    const youTubeCovid19PlayListApi = `https://www.googleapis.com/youtube/v3/search?order=date&part=snippet&channelId=UCL03ygcTgIbe36o2Z7sReuQ&maxResults=50&key=${APIKEY}${nextToken}`;\r\n    return youTubeCovid19PlayListApi;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n  const value = {\r\n    allVideoPlayList,\r\n    handleChange,\r\n    searchTerm,\r\n  };\r\n\r\n  return (\r\n    <youtubeListContextProvider.Provider value={value}>\r\n      {children}\r\n    </youtubeListContextProvider.Provider>\r\n  );\r\n};\r\n\r\nexport default YoutubeListContext;\r\n","import React from \"react\";\r\nconst Tooltip = ({ children, text, ...rest }) => {\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  return (\r\n    <div className=\"tooltip-container\">\r\n      <div className={show ? \"tooltip-box visible\" : \"tooltip-box\"}>\r\n        {text}\r\n        <span className=\"tooltip-arrow\" />\r\n      </div>\r\n      <div\r\n        onMouseEnter={() => setShow(true)}\r\n        onMouseLeave={() => setShow(false)}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import React, { useContext } from \"react\";\r\nimport { youtubeListContextProvider } from \"../../YoutubeListContext/YoutubeListContext\";\r\nimport { FaInfoCircle } from \"react-icons/fa\";\r\nimport Tooltip from \"../Tooltip/Tooltip\";\r\n\r\nconst Search = () => {\r\n  const contextObject = useContext(youtubeListContextProvider);\r\n  const { handleChange, searchTerm } = contextObject;\r\n  return (\r\n    <div className=\"search-container\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={searchTerm}\r\n        onChange={(e) => handleChange(e)}\r\n      />\r\n      <Tooltip text=\"search by title\">\r\n        <i style={{ color: \"white\" }}>\r\n          <FaInfoCircle />\r\n        </i>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Search from \"../Search/Search\";\r\nconst Navigation = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-default navbar-static-top\">\r\n        <ul className=\"nav nav-pills\">\r\n          <li>HCA</li>\r\n          <li>\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to={\"/covid19-videos\"}\r\n              exact\r\n              activeClassName=\"active\"\r\n            >\r\n              covid19-videos\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to={\"/all-videos\"}\r\n              exact\r\n              activeClassName=\"active\"\r\n            >\r\n              All Videos\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li>\r\n            <Search />\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nfunction Home() {\r\n  return <div>Home</div>;\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst Card = ({ img, title, description, publishDate }) => {\r\n  const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  const dateFormat = (d) => {\r\n    let date = new Date(d);\r\n    return (\r\n      date.getUTCDate() +\r\n      \" \" +\r\n      monthNames[date.getUTCMonth()] +\r\n      \", \" +\r\n      date.getUTCFullYear()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={img} />\r\n      <div className=\"card-body\">\r\n        <h2>{title}</h2>\r\n        <p>{description}</p>\r\n        <h5>Publish at {dateFormat(publishDate)}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\r\n\r\nconst Modal = ({ handleClose, show, children }) => {\r\n  return (\r\n    <div className=\"showModal\">\r\n      <div className=\"modal-container\">\r\n        <div className=\"modal-wrap\">\r\n          {children}\r\n          <a\r\n            href=\"javascript:;\"\r\n            className=\"modal-close\"\r\n            onClick={() => handleClose()}\r\n          >\r\n            <span>\r\n              <AiOutlineCloseCircle />\r\n            </span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nclass YouTubePlayer extends React.Component {\r\n  render() {\r\n    const opts = {\r\n      height: \"400\",\r\n      width: \"400\",\r\n      playerVars: {\r\n        autoPlay: 1,\r\n      },\r\n    };\r\n\r\n    return (\r\n      <YouTube\r\n        videoId={this.props.videoId}\r\n        opts={opts}\r\n        onReady={this._onReady}\r\n      />\r\n    );\r\n  }\r\n\r\n  _onReady(event) {\r\n    // access to player in all event handlers via event.target\r\n    event.target.pauseVideo();\r\n  }\r\n}\r\n\r\nexport default YouTubePlayer;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport YouTubePlayer from \"../YouTubePlayer/YouTubePlayer\";\r\nimport { youtubeListContextProvider } from \"../../YoutubeListContext/YoutubeListContext\";\r\n\r\nconst VideoListComponent = ({ youtubeCovid19ListProp }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [videoId, setVideoId] = useState(\"\");\r\n  const useContextObject = useContext(youtubeListContextProvider);\r\n  const { searchTerm } = useContextObject;\r\n\r\n  const cardClickHandler = (uniqueVideoId) => {\r\n    //Showing the video in modal popup\r\n    setShowModal(true);\r\n    //getting video unique id\r\n    setVideoId(uniqueVideoId);\r\n  };\r\n  const setModelCloseHandler = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  //Searching the video basis on video title\r\n  const filterOnTitle = youtubeCovid19ListProp.filter((item) =>\r\n    item.snippet.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const videoSnipList = filterOnTitle.map((item, index) => {\r\n    const { snippet, id } = item;\r\n    const { title, description, thumbnails, publishedAt, resourceId } = snippet;\r\n\r\n    return (\r\n      <li\r\n        className=\"cards\"\r\n        key={`${id.videoId}_${index}`}\r\n        onClick={() => cardClickHandler(id.videoId)}\r\n      >\r\n        <Card\r\n          img={thumbnails.high.url}\r\n          title={title}\r\n          description={description}\r\n          publishDate={publishedAt}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"videoList\">{videoSnipList}</ul>\r\n      {showModal ? (\r\n        <Modal show={showModal} handleClose={setModelCloseHandler}>\r\n          <YouTubePlayer videoId={videoId} />\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoListComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nfunction Loader() {\r\n  const [redirctTo, setRedirctTo] = useState(false);\r\n  useEffect(() => {\r\n    const timeoutfn = setTimeout(() => {\r\n      //we are redirecting to home page if we are not getting data within 15sec\r\n      setRedirctTo(true);\r\n    }, 15000);\r\n\r\n    return () => {\r\n      clearTimeout(timeoutfn);\r\n      setRedirctTo(false);\r\n    };\r\n  }, []);\r\n\r\n  if (redirctTo) {\r\n    return <Redirect to=\"/error\" />;\r\n  } else {\r\n    return <div className=\"loading\"></div>;\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport VideoListComponent from \"../VideoListComponent/VideoListComponent\";\r\nimport { youtubeListContextProvider } from \"../../YoutubeListContext/YoutubeListContext\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nconst AllVideos = () => {\r\n  //get data from context\r\n  const youtubeNonCovid19ListContext = useContext(youtubeListContextProvider);\r\n  const { allVideoPlayList } = youtubeNonCovid19ListContext;\r\n\r\n  const filterDataNonCovid19 = allVideoPlayList.filter((item) => {\r\n    const { snippet } = item;\r\n    const { title } = snippet;\r\n    //filtering the result using regex expression which are non covid podcast\r\n    const regex = /COVID-19\\sVaccine\\sPodcast:.()/gm;\r\n    const result = title.match(regex);\r\n    if (!result) {\r\n      return item;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {filterDataNonCovid19.length > 0 ? (\r\n        <VideoListComponent youtubeCovid19ListProp={filterDataNonCovid19} />\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(AllVideos);\r\n","import React, { useContext, useEffect } from \"react\";\r\n\r\nimport VideoListComponent from \"../VideoListComponent/VideoListComponent\";\r\nimport { youtubeListContextProvider } from \"../../YoutubeListContext/YoutubeListContext\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nconst Covid19Videos = () => {\r\n  const youtubeCovid19List = useContext(youtubeListContextProvider);\r\n  const { allVideoPlayList } = youtubeCovid19List;\r\n  const filterDataCovid19 = allVideoPlayList.filter((item) => {\r\n    const { snippet } = item;\r\n    const { title } = snippet;\r\n    //filtering the result using regex expression which are covid podcast\r\n    const regex = /COVID-19\\sVaccine\\sPodcast:.()/gm;\r\n    const result = title.match(regex);\r\n    if (result) {\r\n      return item;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {filterDataCovid19.length > 0 ? (\r\n        <VideoListComponent youtubeCovid19ListProp={filterDataCovid19} />\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Covid19Videos;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ErrorPage = () => {\r\n  return (\r\n    <div className=\"error-page\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8 col-lg-offset-3 col-md-10 col-md-offset-3\">\r\n            <div className=\"clearfix alignError\">\r\n              <div className=\"error-page-message error-page-message-lead\">\r\n                404\r\n              </div>\r\n              <div className=\"error-page-message\">\r\n                Sorry, but nothing exists here.\r\n              </div>\r\n              <div className=\"error-page-message error-page-message-small\">\r\n                Find something{\" \"}\r\n                <h1>\r\n                  <Link to=\"/\">Go to Home</Link>\r\n                </h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Home from \"./Components/Home/Home\";\nimport AllVideos from \"./Components/AllVideos/AllVideos\";\nimport Covid19Videos from \"./Components/Covid19Videos/Covid19Videos\";\nimport Search from \"./Components/Search/Search\";\nimport YoutubeListContext from \"./YoutubeListContext/YoutubeListContext\";\nimport ErrorPage from './Components/ErrorPage/ErrorPage';\n\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <YoutubeListContext>\n    <Router>\n      <div>\n        <Navigation />\n        <Switch>\n          <Route exact path=\"/\" render={()=>(<Redirect to=\"/covid19-videos\"/>)} />\n          <Route path=\"/covid19-videos\" component={Covid19Videos} />\n          <Route path=\"/all-videos\" component={AllVideos} />\n          <Route path=\"/search\" component={Search} />\n          <Route path=\"/error\" component={ErrorPage} />\n          <Route component={ErrorPage} />\n        </Switch>\n      </div>\n    </Router>\n    </YoutubeListContext>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}